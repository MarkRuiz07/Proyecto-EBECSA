<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAMQOAADEDgAAAAAAAAAA
        AAAaFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/3Nx4P91c+D/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/HRjN//7+//////////////r6/v81MNL/GhTM/xoU
        zP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/HhnN/////////////////////////////Pz+/0M/
        1f8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/vr3w////////////////////////////////////
        ////////7u77/yEbzf8aFMz/GhTM/xoUzP8eGM3/+Pj9//////////////////////95duH/PDfU//v7
        /v/////////////////+/v//UU3Y/xoUzP8aFMz/7+/8//////////////////////+trO3/GhTM/xoU
        zP86NdP/+/v+//////////////////////8aFMz/IhzO//////////////////7+//9MR9f/GhTM/xoU
        zP8jHs7/HBbM/xsWzP/NzfT/////////////////GxbM/yIdzv///////////4B+4/8cFsz/GhTM/xoU
        zP8aFMz/bmzf//X2/f8pJND/GhTM/zMv0v/6+v7//////xsWzP8eGc3/5OT5/xwWzP8aFMz/GhTM/zk1
        0/8dF83/GhTM/zs30////////v7//1dT2f8aFMz/GhTM/8jH8/8aFMz/GxXM/xwWzP8aFMz/GhTM/xoU
        zP+npez/zc30/xsVzP8aFMz/o6Lq///////+/v//VE/Y/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/fHri///////z8vz/TUjX/xoUzP9OStj//v7//9ra9/8aFMz/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/GhTM/xoUzP+KiOX///////////9JRdf/GhTM/yciz/9DP9X/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/GhTM/xoUzP8aFMz/GhTM/5qY6P//////iYfl/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/JB7O/0pG1/8aFMz/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoUzP8aFMz/GhTM/xoU
        zP8aFMz/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>